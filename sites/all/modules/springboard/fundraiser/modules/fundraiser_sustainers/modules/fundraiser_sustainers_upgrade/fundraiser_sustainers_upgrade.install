<?php
/**
 * @file
 * Sets up the petition module and content type.
 */

/**
 * Implements hook_install().
 */
function fundraiser_sustainers_upgrade_install() {
  $webform_node_types = variable_get('webform_node_types', array());
  $webform_node_types[] = 'sustainers_upgrade_form';
  variable_set('webform_node_types', $webform_node_types);
  $webform_node_types_primary = variable_get('webform_node_types_primary', array());
  $webform_node_types_primary[] = 'sustainers_upgrade_form';
  variable_set('webform_node_types_primary', $webform_node_types_primary);

  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install');
  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install_fields');
  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install_example');
  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install_salesforce');

  _fundraiser_sustainers_upgrade_add_content_type();
  _fundraiser_sustainers_upgrade_add_fields();
  _fundraiser_sustainers_upgrade_salesforce_install();
  _fundraiser_sustainers_upgrade_add_example();
}


/**
 * Implements hook_uninstall().
 */
function fundraiser_sustainers_upgrade_uninstall() {
  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install');
  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install_fields');
  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install_salesforce');

  _fundraiser_sustainers_upgrade_delete_nodes();
  _fundraiser_sustainers_upgrade_delete_fields();
  node_type_delete('sustainers_upgrade_form');
  field_purge_batch(1000);
  fundraiser_sustainers_upgrade_salesforce_uninstall();
}

/**
 * Add the sustainers upgrade rollback body field.
 */
function fundraiser_sustainers_upgrade_update_7001() {
  module_load_include('inc', 'fundraiser_sustainers_upgrade', 'includes/install/fundraiser_sustainers_upgrade.install_fields');
  _fundraiser_sustainers_upgrade_add_fields(TRUE);
}

/**
 * Put the new field in the right fieldgroup.
 */
function fundraiser_sustainers_upgrade_update_7002() {

  $groups = field_group_read_groups(array(
    'entity_type' => 'node',
    'bundle'      => 'sustainers_upgrade_form',
    'view_mode'   => 'full',
  ));

  $group = $groups['node']['sustainers_upgrade_form']['form']['group_sustainers_upgrade_options'];
  $group->children[] = 'field_sustainers_upgrade_b_roll';
  field_group_group_save($group);
}

/**
 * Update the rollback confirmaiton label.
 */
function fundraiser_sustainers_upgrade_update_7003() {
  $field_instance = field_info_instance('node', 'field_sustainers_upgrade_roll', 'sustainers_upgrade_form');
  $field_instance['label'] = 'Rollback Confirmation Message';
  $field_instance['widget']['weight'] = 5;
  field_update_instance($field_instance);
}

/**
 * Change Sustainers_Upgrade__c mappings to Sustainer_Upgrade__c.
 */
function fundraiser_sustainers_upgrade_update_7004() {
  db_query("UPDATE {salesforce_genmap_map} SET salesforce_object_type='Sustainer_Upgrade__c' WHERE salesforce_object_type='Sustainers_Upgrade__c'");
}

/**
 * Add the node properties map to sustainers upgrade..
 */
function fundraiser_sustainers_upgrade_update_7005() {
  $result = db_query('SELECT mid, field_map FROM {salesforce_genmap_map} WHERE module = :module', array(':module' => 'fundraiser_sustainers_upgrade'));

  foreach ($result as $record) {
    $map_need_updating = FALSE;
    $map = unserialize($record->field_map);
    $has_node_map = !empty($map['salesforce_node_map']);

    if (!$has_node_map || !array_key_exists('internal_name', $map['salesforce_node_map'])) {
      $map['salesforce_node_map']['internal_name'] = 'Internal_Name__c';
      $map_need_updating = TRUE;
    }

    if (!$has_node_map || !array_key_exists('title', $map['salesforce_node_map'])) {
      $map['salesforce_node_map']['title'] = 'Name';
      $map_need_updating = TRUE;
    }

    if (!array_key_exists('fsu_nid', $map['webform_map'])) {
      $map['webform_map']['fsu_nid'] = 'Form_ID__c';
      $map_need_updating = TRUE;
    }

    // Only perform the update if the fields weren't already mapped manually.
    if ($map_need_updating) {
      db_update('salesforce_genmap_map')
        ->fields(array(
          'field_map' => serialize($map),
        ))
        ->condition('mid', $record->mid)
        ->execute();
    }
  }
}